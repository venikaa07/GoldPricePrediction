# -*- coding: utf-8 -*-
"""GoldPricePrediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11UrRJ8DSrpkHagbFUJA033RxnVLcWIDk

Importing Libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn import metrics

"""Data Collection & Processing"""

gold_dataset = pd.read_csv("/content/gld_price_data.csv") #loading the csv file

gold_dataset.head() #first 5 rows

gold_dataset.tail() #last 5 rows

gold_dataset.shape #number of rows and column

gold_dataset.info() #more info of the dataset

gold_dataset.isnull().sum() #checking the number of missing values

gold_dataset.describe() #stats measures

numeric_data = gold_dataset.select_dtypes(include=[np.number])
correlation = numeric_data.corr()
plt.figure(figsize=(8,8))
sns.heatmap(correlation, cbar=True, square=True,fmt='.1f',annot=True,annot_kws={'size':8},cmap='Blues')

print(correlation['GLD'])

sns.distplot(gold_dataset['GLD'],color='red')

"""Splitting : Features & Target"""

X = gold_dataset.drop(['Date','GLD'],axis=1)
Y = gold_dataset['GLD']

print(X)

print(Y)

"""Dividing into Training Data & Testing Data"""

X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size =0.2 ,random_state = 2)

"""Model Training : Random Forest Regressor"""

regressor = RandomForestRegressor(n_estimators=100)

regressor.fit(X_train,Y_train)

"""Evaluation Of Model"""

test_prediction = regressor.predict(X_test)

print(test_prediction)

error_score = metrics.r2_score(Y_test,test_prediction)
print(error_score) #R-SQUARED ERROR

"""Compare the actual and predicted values"""

Y_test = list(Y_test)

plt.plot(Y_test,color='red',label='Actual Value')
plt.plot(test_prediction,color='blue',label='Predicted Value')
plt.title('Actual VS Predicted')
plt.xlabel('Number of values')
plt.ylabel('GLD Price')
plt.legend()
plt.show()